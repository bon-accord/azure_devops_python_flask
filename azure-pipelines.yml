# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  dockerId: my-docker-id  # Replace with your Docker ID for Docker Hub or the admin user name for the Azure Container Registry
  imageName: python_flask_ado  # Replace with the name of the image you want to publish

steps:

- task: SonarQubePrepare@4
  inputs:
    SonarQube: 'bonaccord-sonarqube'
    scannerMode: 'CLI'
    configMode: 'file'

- task: Docker@2
  displayName: Login to ACR
  inputs:
    command: login
    containerRegistry: bplab-azure-container-reg

#- script: docker build -t $(imageName) . 
- task: Docker@2
  displayName: Build and Push
  inputs:
    command: buildAndPush
    containerRegistry: bplab-azure-container-reg
    repository: azure_devops_python_flask
    tags: 0.1

- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'
  
- task: DownloadBuildArtifacts@0
  inputs:
    buildType: 'current'
    downloadType: 'specific'
    itemPattern: '*.yaml'
    downloadPath: '$(System.ArtifactsDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'repofiles'
    publishLocation: 'Container'

#- task: SonarQubeAnalyze@4

- script: wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.3.0.1492-linux.zip
  displayName: Get sonar-scanner Binary

- task: ExtractFiles@1
  displayName: Extract sonar-scanner Tarfile
  inputs:
    archiveFilePatterns: 'sonar-scanner*.zip'
    cleanDestinationFolder: false
  continueOnError: true

- script: |
    sonar-scanner-3.3.0.1492-linux*/bin/sonar-scanner \
      -Dsonar.projectKey=sonaruser-proj01 \
      -Dsonar.sources=. \
      -Dsonar.host.url=https://sonarqube-azureappservice4089.azurewebsites.net \
      -Dsonar.login=419b0f760862800f635776f1484fd1dd0dcb0c6e
  displayName: Sonar Analysis
  
- task: SonarQubePublish@4
  inputs:
    pollingTimeoutSec: '300'